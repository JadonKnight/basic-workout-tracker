// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String     @db.Char(60)
  createdAt DateTime   @default(now())
  // Due to prisma weirdness with not being able to null a Datetime we assume a first login happens on creation
  lastLogin DateTime   @default(now())
  profile   Profile?
  workouts  Workout[]
  exercises Exercise[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  name   String? @default("")
  email  String? @unique @default("")
  avatar String? @default("")
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model Exercise {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  description     String?          @default("")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now())
  workoutExercise WorkoutExercise[]
  createdBy       User?            @relation(fields: [createdById], references: [id])
  createdById     Int?
}

model Workout {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  name            String            @default("")
  userId          Int
  user            User              @relation(fields: [userId], references: [id])
  daysOfWeek      Int               // NOTE: This is a bitmask of the days of the week with Sunday being 1 and Saturday being 64
  workoutExercise WorkoutExercise[]
}

model Set {
  id                Int             @id @default(autoincrement())
  reps              Int
  weight            Int
  workingInterval   Int
  restInterval      Int
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @default(now())
  workoutExerciseId Int
  workoutExercise   WorkoutExercise @relation(fields: [workoutExerciseId], references: [id])
}

model WorkoutExercise {
  id         Int      @id @default(autoincrement())
  workoutId  Int
  exerciseId Int
  workout    Workout  @relation(fields: [workoutId], references: [id])
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  sets       Set[]
}
